(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{174:function(e,t,n){"use strict";n.r(t);var a=n(0),s=Object(a.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),n("p",[e._v("本教程介绍如何将您的数据文件加载到Druid。\n在本教程中，我们假设您已经按照快速入门中所述下载了Druid，并将其在本机上运行。并且您不需要事先加载任何数据。\n上述步骤完成后，你就可以通过编写自定义的提取规范来加载自己的数据集了。")]),e._v(" "),e._m(2),e._v(" "),n("p",[e._v("您可以使用Druid批量加载进程将文件数据加载到Druid。在quickstart/wikiticker-index.json有一个批量提取规范的示例，根据需求可以自行修改。\n最重要的问题是：")]),e._v(" "),e._m(3),n("p",[e._v('如果您的数据里面没有记录时间，您可以用当前时间标记每一行数据，或者也可以用一个固定时间戳去标记所有行，例如"2000-01-01T00:00:00.000Z"。\n让我们以网页浏览数据集为例， Druid支持TSV，CSV和JSON，开箱即用。 请注意，Druid不支持嵌套的JSON对象，因此如果您使用JSON，则应提供包含平面对象的文件。')]),e._v(" "),e._m(4),n("p",[e._v("确保文件末尾没有换行符。 如果将此文件保存到名为“pageviews.json”的文件，则对于此数据集：")]),e._v(" "),e._m(5),e._v(" "),n("p",[e._v("你可以将现有的索引文件quickstart/wikiticker-index.json，copy到新文件。")]),e._v(" "),e._m(6),n("p",[e._v("然后通过更改这些部分修改它：")]),e._v(" "),e._m(7),e._m(8),e._m(9),e._m(10),e._m(11),e._m(12),e._v(" "),n("p",[e._v("要运行此任务，请确保索引任务能够读取pageviews.json：\n如果你是本机运行（没有配置到hadoop的连接，这也是Druid默认值），那么将pageviews.json放到Druid的根目录下。\n如果Druid配置了hadoop集群连接，那么将pageviews.json上传到HDFS。并且调整上面提取规范的配置路径。\n向Druid Overlord上提交你的索引任务，就可以开始进行索引了，在标准Druid安装中，URL为"),n("a",{attrs:{href:"http://OVERLORD_IP:8090/druid/indexer/v1/task",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://OVERLORD_IP:8090/druid/indexer/v1/task"),n("OutboundLink")],1),e._v(" 。")]),e._v(" "),e._m(13),n("p",[e._v("如果你的所有东西都是在本机运行，你可以使用localhost")]),e._v(" "),e._m(14),n("p",[e._v('如果此任务发生任何错误（例如状态为FAILED），可以通过overlord控制台上的"Task log"进行故障排查('),n("a",{attrs:{href:"http://www.localhost/console.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.localhost/console.html"),n("OutboundLink")],1),e._v(")。")]),e._v(" "),e._m(15),e._v(" "),n("p",[e._v("您的数据应该在一到两分钟就能完全可用，在Coordinator控制台"),n("a",{attrs:{href:"http://localhost:8081/#/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://localhost:8081/#/"),n("OutboundLink")],1),e._v(" 可以监控进度。\n一旦数据完全可用，就可以通过任意支持的查询方法查询数据了。")])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"从文件加载数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从文件加载数据","aria-hidden":"true"}},[this._v("#")]),this._v(" 从文件加载数据")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#入门","aria-hidden":"true"}},[this._v("#")]),this._v(" 入门")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"编写提取规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编写提取规范","aria-hidden":"true"}},[this._v("#")]),this._v(" 编写提取规范")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('{\n  "type" : "index_hadoop",\n  "spec" : {\n    "ioConfig" : {\n      "type" : "hadoop",\n      "inputSpec" : {\n        "type" : "static",\n        //2.数据集路径，多个文件使用逗号分隔\n        "paths" : "quickstart/wikiticker-2015-09-12-sampled.json"\n      }\n    },\n    "dataSchema" : {\n      //1.应该调用什么数据集\n      "dataSource" : "wikiticker",\n      "granularitySpec" : {\n        "type" : "uniform",\n        "segmentGranularity" : "day",\n        "queryGranularity" : "none",\n        //6.加载的时间的范围或者间隔\n        "intervals" : ["2015-09-12/2015-09-13"]\n      },\n      "parser" : {\n        "type" : "hadoopyString",\n        "parseSpec" : {\n          "format" : "json",\n          "dimensionsSpec" : {\n            //4.有哪些字段作为维度\n            "dimensions" : [\n              "channel",\n              "cityName",\n              "comment",\n              "countryIsoCode",\n              "countryName",\n              "isAnonymous",\n              "isMinor",\n              "isNew",\n              "isRobot",\n              "isUnpatrolled",\n              "metroCode",\n              "namespace",\n              "page",\n              "regionIsoCode",\n              "regionName",\n              "user"\n            ]\n          },\n          "timestampSpec" : {\n            "format" : "auto",\n            //3.哪个字段应该视为时间戳\n            "column" : "time"\n          }\n        }\n      },\n      //5.哪些字段作为指标\n      "metricsSpec" : [\n        {\n          "name" : "count",\n          "type" : "count"\n        },\n        {\n          "name" : "added",\n          "type" : "longSum",\n          "fieldName" : "added"\n        },\n        {\n          "name" : "deleted",\n          "type" : "longSum",\n          "fieldName" : "deleted"\n        },\n        {\n          "name" : "delta",\n          "type" : "longSum",\n          "fieldName" : "delta"\n        },\n        {\n          "name" : "user_unique",\n          "type" : "hyperUnique",\n          "fieldName" : "user"\n        }\n      ]\n    },\n    "tuningConfig" : {\n      "type" : "hadoop",\n      "partitionsSpec" : {\n        "type" : "hashed",\n        "targetPartitionSize" : 5000000\n      },\n      "jobProperties" : {}\n    }\n  }\n}\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('{"time": "2015-09-01T00:00:00Z", "url": "/foo/bar", "user": "alice", "latencyMs": 32}\n{"time": "2015-09-01T01:00:00Z", "url": "/", "user": "bob", "latencyMs": 11}\n{"time": "2015-09-01T01:30:00Z", "url": "/foo/bar", "user": "bob", "latencyMs": 45}\n')])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v('数据集叫做 "pageviews"')]),e._v(" "),n("li",[e._v('数据位于"pageviews.json"中')]),e._v(" "),n("li",[e._v('时间戳是 "time"字段')]),e._v(" "),n("li",[e._v('"url" 和 "user"字段适合作为数据维度')]),e._v(" "),n("li",[e._v("网页的访问量（count统计）和总耗时（sum(latencyMs)）是很好的指标，当我们加载数据的时候收集这些统计值，可以让我们能够很容易在查询时计算平均值。")]),e._v(" "),n("li",[e._v("数据涵盖的时间范围是 2015-09-01 (包含) 到2015-09-02 (不包含)。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("cp quickstart/wikiticker-index.json my-index-task.json\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('"dataSource": "pageviews"\n"inputSpec": {\n  "type": "static",\n  "paths": "pageviews.json"\n}\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('"timestampSpec": {\n  "format": "auto",\n  "column": "time"\n}\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('"dimensionsSpec": {\n  "dimensions": ["url", "user"]\n}\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('"metricsSpec": [\n  {"name": "views", "type": "count"},\n  {"name": "latencyMs", "type": "doubleSum", "fieldName": "latencyMs"}\n]\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('"granularitySpec": {\n  "type": "uniform",\n  "segmentGranularity": "day",\n  "queryGranularity": "none",\n  "intervals": ["2015-09-01/2015-09-02"]\n}\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"运行任务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行任务","aria-hidden":"true"}},[this._v("#")]),this._v(" 运行任务")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("curl -X 'POST' -H 'Content-Type:application/json' -d @my-index-task.json OVERLORD_IP:8090/druid/indexer/v1/task\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("curl -X 'POST' -H 'Content-Type:application/json' -d @my-index-task.json localhost:8090/druid/indexer/v1/task\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"数据查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据查询","aria-hidden":"true"}},[this._v("#")]),this._v(" 数据查询")])}],!1,null,null,null);s.options.__file="从文件加载数据.md";t.default=s.exports}}]);